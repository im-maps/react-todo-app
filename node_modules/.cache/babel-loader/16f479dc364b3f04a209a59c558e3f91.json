{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mark Ashley\\\\Projects\\\\react-todo-app\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"todo-form\",\n      onSubmit: handleSubmit,\n      children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a todo\",\n          value: input,\n          name: \"text\",\n          className: \"todo-input\",\n          onChange: handleChange,\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo-button\",\n          children: \"Add todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), \" \"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a todo\",\n          value: input,\n          name: \"text\",\n          className: \"todo-input\",\n          onChange: handleChange,\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo-button\",\n          children: \"Add todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/Mark Ashley/Projects/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AAEA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMO,YAAY,GAAGF,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACG,cAAF;AAEAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACfC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADW;AAEfC,MAAAA,IAAI,EAAEjB;AAFS,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GATD;;AAWA,sBACI;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,QAAQ,EAAES,YAAtC;AAAA,gBACKX,KAAK,CAACG,IAAN,gBAAc;AAAA,gCAAE;AACjB,UAAA,IAAI,EAAC,MADY;AAEjB,UAAA,WAAW,EAAC,YAFK;AAGjB,UAAA,KAAK,EAAEF,KAHU;AAIjB,UAAA,IAAI,EAAC,MAJY;AAKjB,UAAA,SAAS,EAAC,YALO;AAMjB,UAAA,QAAQ,EAAEO,YANO;AAOjB,UAAA,GAAG,EAAEH;AAPY;AAAA;AAAA;AAAA;AAAA,gBAAF,eASf;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATe;AAAA,sBAAd,gBAUA;AAAA,gCAAE;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,WAAW,EAAC,YAFb;AAGC,UAAA,KAAK,EAAEJ,KAHR;AAIC,UAAA,IAAI,EAAC,MAJN;AAKC,UAAA,SAAS,EAAC,YALX;AAMC,UAAA,QAAQ,EAAEO,YANX;AAOC,UAAA,GAAG,EAAEH;AAPN;AAAA;AAAA;AAAA;AAAA,gBAAF,eASG;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATH;AAAA;AAXL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GApDQN,Q;;KAAAA,Q;AAsDT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n        id: Math.floor(Math.random() * 10000),\r\n        text: input\r\n    });\r\n\r\n        setInput('');\r\n    }; \r\n\r\n    return (\r\n        <div>\r\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n                {props.edit ? (<><input \r\n                type=\"text\" \r\n                placeholder=\"Add a todo\" \r\n                value={input} \r\n                name='text' \r\n                className='todo-input'\r\n                onChange={handleChange}\r\n                ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\">Add todo</button> </>) : \r\n                (<><input \r\n                    type=\"text\" \r\n                    placeholder=\"Add a todo\" \r\n                    value={input} \r\n                    name='text' \r\n                    className='todo-input'\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                    />\r\n                    <button className=\"todo-button\">Add todo</button></>)\r\n                } \r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}